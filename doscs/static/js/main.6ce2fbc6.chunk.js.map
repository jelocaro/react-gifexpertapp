{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cast","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","setTimeout","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iLAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACTC,mBAAS,IADA,mBACrCC,EADqC,KACzBC,EADyB,KAgB5C,OACI,8BACI,sBAAMC,SAbO,SAACC,GACpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAQV,SAEA,uBAAOO,KAAM,OAAOC,MAAOT,EAAYU,SAlBrB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,+BCHlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAG1Ca,QAAQC,IAAIR,GAZO,kBAaZA,GAbY,4CAAH,sDCDPS,EAAc,SAAC,GAAqB,EAApBN,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKgB,UAAU,0CAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACvB,4BAAIA,QCFAS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECCX,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAK,GACLe,SAAQ,IAH4B,mBACjCC,EADiC,KAC1BC,EAD0B,KAuBxC,OAjBAC,qBAAU,WAENC,YAAW,WACP3B,EAASC,GACR2B,MAAK,SAAAC,GACFJ,EAAS,CACLjB,KAAKqB,EACLN,SAAS,SAIlB,OAEJ,CAACtB,IAIGuB,EDpBwBM,CAAa7B,GAAhCa,EAJuB,EAI5BN,KAAae,EAJe,EAIfA,QAMpB,OAEI,qCAEA,6BAAKtB,IAELsB,GAAW,wCACX,qBAAKJ,UAAU,YAAf,SAIOL,EAAOJ,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEMA,GADDA,EAAIC,aEvBbmB,EAAe,WAAM,MAIM5C,mBAAS,CAAC,cAJhB,mBAIvB6C,EAJuB,KAIX9C,EAJW,KAS9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAKG,6BAEQ8C,EAAWtB,KAAK,SAAAT,GAAQ,OACxB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCnBrCgC,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.6ce2fbc6.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport propTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue]= useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      if(inputValue.trim().length > 2){\r\n        setCategories( cast => [ inputValue, ...cast,]);\r\n        setInputValue('');\r\n\r\n      }\r\n\r\n      \r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n            \r\n            <input type= \"text\" value={inputValue} onChange={handleInputChange}></input>\r\n\r\n            </form>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: propTypes.func.isRequired\r\n}\r\n","\r\n\r\n\r\nexport const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category) }&limit=10&api_key=hFhFI7Zkhfo5vgZOSCyk5RyCspOO58A5`;\r\n    const resp = await fetch( url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    console.log(gifs);\r\n    return gifs;\r\n\r\n\r\n    \r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n  \r\n    return (\r\n        <div className='card animate__animated animate__bounce '>\r\n            <img src={url} alt={title}/>\r\n         <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n import { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    \r\n\r\n    const {data:images, loading} = useFetchGifs(category)\r\n\r\n\r\n  \r\n    \r\n \r\n    return (\r\n\r\n        <>\r\n\r\n        <h3>{category }</h3>\r\n\r\n       {loading && <p>Loading</p> }\r\n        <div className='card-grid'>\r\n       \r\n        \r\n            {\r\n               images.map(img => (\r\n                 <GifGridItem \r\n                 key={img.id}\r\n                   {...img}/>\r\n               ))\r\n               }\r\n       \r\n          \r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        setTimeout(() => {\r\n            getGifs( category)\r\n            .then(imgs => {\r\n                setstate({\r\n                    data:imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n        }, 3000)\r\n     \r\n    }, [category])\r\n\r\n    \r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['one punch', 'samurai x', 'dragon ball']\r\n \r\n    const [categories, setCategories] = useState(['one punch']);\r\n       /*\r\n    const handleAdd = () => {\r\n         setCategories( [...categories, 'one piece'])\r\n    }*/\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr></hr>\r\n\r\n            \r\n\r\n            {\r\n               <ol>\r\n                   {\r\n                       categories.map( category =>  ( \r\n                       <GifGrid key={category} category={category}/>\r\n                       ))\r\n                   }\r\n               </ol>\r\n            }\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}